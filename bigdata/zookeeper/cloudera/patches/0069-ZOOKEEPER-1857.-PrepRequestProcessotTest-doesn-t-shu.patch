From 886f46609b7cd0d5442aa58ce498b0845001608b Mon Sep 17 00:00:00 2001
From: Michi Mutsuzaki <michim@apache.org>
Date: Thu, 9 Jan 2014 23:01:19 +0000
Subject: [PATCH 69/94] =?UTF-8?q?ZOOKEEPER-1857.=20PrepRequestProcessotTest=20?=
 =?UTF-8?q?doesn't=20shutdown=20ZooKeeper=20server=20(Germ=C3=A1n=20Blanco=20?=
 =?UTF-8?q?via=20michim)?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/branches/branch-3.4@1556977 13f79535-47bb-0310-9956-ffa450edef68
---
 CHANGES.txt                                        |    3 +++
 .../zookeeper/server/PrepRequestProcessorTest.java |    9 +++++++--
 2 files changed, 10 insertions(+), 2 deletions(-)

diff --git a/CHANGES.txt b/CHANGES.txt
index d28cef9..1f22c1a 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -107,6 +107,9 @@ BUGFIXES:
   ZOOKEEPER-1057. zookeeper c-client, connection to offline server fails to
   successfully fallback to second zk host (Germán Blanco via michim)
 
+  ZOOKEEPER-1857. PrepRequestProcessotTest doesn't shutdown ZooKeeper server
+  (Germán Blanco via michim)
+
 IMPROVEMENTS:
 
 
diff --git a/src/java/test/org/apache/zookeeper/server/PrepRequestProcessorTest.java b/src/java/test/org/apache/zookeeper/server/PrepRequestProcessorTest.java
index bdbe45a..d5769cb 100644
--- a/src/java/test/org/apache/zookeeper/server/PrepRequestProcessorTest.java
+++ b/src/java/test/org/apache/zookeeper/server/PrepRequestProcessorTest.java
@@ -23,6 +23,7 @@ import static org.junit.Assert.*;
 import java.io.File;
 import java.io.PrintWriter;
 import java.nio.ByteBuffer;
+import java.util.concurrent.CountDownLatch;
 
 import org.apache.zookeeper.PortAssignment;
 import org.apache.zookeeper.KeeperException.Code;
@@ -43,6 +44,7 @@ import org.junit.Test;
 public class PrepRequestProcessorTest extends ClientBase {
     private static String HOSTPORT = "127.0.0.1:" + PortAssignment.unique();
     private static final int CONNECTION_TIMEOUT = 3000;
+    private final CountDownLatch testEnd = new CountDownLatch(1);
 
     @Test
     public void testPRequest() throws Exception {
@@ -59,14 +61,17 @@ public class PrepRequestProcessorTest extends ClientBase {
         PrepRequestProcessor processor = new PrepRequestProcessor(zks, new MyRequestProcessor());
         Request foo = new Request(null, 1l, 1, OpCode.create, ByteBuffer.allocate(3), null);
         processor.pRequest(foo);
+        testEnd.await(5, java.util.concurrent.TimeUnit.SECONDS);
+        f.shutdown();
+        zks.shutdown();
     }
  
 
     private class MyRequestProcessor implements RequestProcessor {
         @Override
         public void processRequest(Request request) {
-          Assert.assertEquals("Request should have marshalling error", new ErrorTxn(Code.MARSHALLINGERROR.intValue()),  request.txn);
-            
+            Assert.assertEquals("Request should have marshalling error", new ErrorTxn(Code.MARSHALLINGERROR.intValue()),  request.txn);
+            testEnd.countDown();            
         }
         @Override
         public void shutdown() {
-- 
1.7.9.5

